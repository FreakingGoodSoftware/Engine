// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Engine.API.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Engine.API.Models
{
    public partial class ProductCategory
    {
        private DateTimeOffset? _modifiedDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? ModifiedDate
        {
            get { return this._modifiedDate; }
            set { this._modifiedDate = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private ProductCategory _parentProductCategory;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public ProductCategory ParentProductCategory
        {
            get { return this._parentProductCategory; }
            set { this._parentProductCategory = value; }
        }
        
        private string _parentProductCategoryID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ParentProductCategoryID
        {
            get { return this._parentProductCategoryID; }
            set { this._parentProductCategoryID = value; }
        }
        
        private IList<ProductCategory> _productCategories;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<ProductCategory> ProductCategories
        {
            get { return this._productCategories; }
            set { this._productCategories = value; }
        }
        
        private int? _productCategoryID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? ProductCategoryID
        {
            get { return this._productCategoryID; }
            set { this._productCategoryID = value; }
        }
        
        private IList<Product> _products;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Product> Products
        {
            get { return this._products; }
            set { this._products = value; }
        }
        
        private string _rowguid;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Rowguid
        {
            get { return this._rowguid; }
            set { this._rowguid = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ProductCategory class.
        /// </summary>
        public ProductCategory()
        {
            this.ProductCategories = new LazyList<ProductCategory>();
            this.Products = new LazyList<Product>();
        }
        
        /// <summary>
        /// Initializes a new instance of the ProductCategory class with
        /// required arguments.
        /// </summary>
        public ProductCategory(string name)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            this.Name = name;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken modifiedDateValue = inputObject["ModifiedDate"];
                if (modifiedDateValue != null && modifiedDateValue.Type != JTokenType.Null)
                {
                    this.ModifiedDate = ((DateTimeOffset)modifiedDateValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken parentProductCategoryValue = inputObject["ParentProductCategory"];
                if (parentProductCategoryValue != null && parentProductCategoryValue.Type != JTokenType.Null)
                {
                    ProductCategory productCategory = new ProductCategory();
                    productCategory.DeserializeJson(parentProductCategoryValue);
                    this.ParentProductCategory = productCategory;
                }
                JToken parentProductCategoryIDValue = inputObject["ParentProductCategoryID"];
                if (parentProductCategoryIDValue != null && parentProductCategoryIDValue.Type != JTokenType.Null)
                {
                    this.ParentProductCategoryID = ((string)parentProductCategoryIDValue);
                }
                JToken productCategoriesSequence = ((JToken)inputObject["ProductCategories"]);
                if (productCategoriesSequence != null && productCategoriesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken productCategoriesValue in ((JArray)productCategoriesSequence))
                    {
                        ProductCategory productCategory2 = new ProductCategory();
                        productCategory2.DeserializeJson(productCategoriesValue);
                        this.ProductCategories.Add(productCategory2);
                    }
                }
                JToken productCategoryIDValue = inputObject["ProductCategoryID"];
                if (productCategoryIDValue != null && productCategoryIDValue.Type != JTokenType.Null)
                {
                    this.ProductCategoryID = ((int)productCategoryIDValue);
                }
                JToken productsSequence = ((JToken)inputObject["Products"]);
                if (productsSequence != null && productsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken productsValue in ((JArray)productsSequence))
                    {
                        Product product = new Product();
                        product.DeserializeJson(productsValue);
                        this.Products.Add(product);
                    }
                }
                JToken rowguidValue = inputObject["rowguid"];
                if (rowguidValue != null && rowguidValue.Type != JTokenType.Null)
                {
                    this.Rowguid = ((string)rowguidValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type ProductCategory
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Name == null)
            {
                throw new ArgumentNullException("Name");
            }
            if (this.ModifiedDate != null)
            {
                outputObject["ModifiedDate"] = this.ModifiedDate.Value;
            }
            if (this.Name != null)
            {
                outputObject["Name"] = this.Name;
            }
            if (this.ParentProductCategory != null)
            {
                outputObject["ParentProductCategory"] = this.ParentProductCategory.SerializeJson(null);
            }
            if (this.ParentProductCategoryID != null)
            {
                outputObject["ParentProductCategoryID"] = this.ParentProductCategoryID;
            }
            JArray productCategoriesSequence = null;
            if (this.ProductCategories != null)
            {
                if (this.ProductCategories is ILazyCollection<ProductCategory> == false || ((ILazyCollection<ProductCategory>)this.ProductCategories).IsInitialized)
                {
                    productCategoriesSequence = new JArray();
                    outputObject["ProductCategories"] = productCategoriesSequence;
                    foreach (ProductCategory productCategoriesItem in this.ProductCategories)
                    {
                        if (productCategoriesItem != null)
                        {
                            productCategoriesSequence.Add(productCategoriesItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.ProductCategoryID != null)
            {
                outputObject["ProductCategoryID"] = this.ProductCategoryID.Value;
            }
            JArray productsSequence = null;
            if (this.Products != null)
            {
                if (this.Products is ILazyCollection<Product> == false || ((ILazyCollection<Product>)this.Products).IsInitialized)
                {
                    productsSequence = new JArray();
                    outputObject["Products"] = productsSequence;
                    foreach (Product productsItem in this.Products)
                    {
                        if (productsItem != null)
                        {
                            productsSequence.Add(productsItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.Rowguid != null)
            {
                outputObject["rowguid"] = this.Rowguid;
            }
            return outputObject;
        }
    }
}
