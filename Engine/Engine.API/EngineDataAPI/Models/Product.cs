// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Engine.API.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Engine.API.Models
{
    public partial class Product
    {
        private string _color;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Color
        {
            get { return this._color; }
            set { this._color = value; }
        }
        
        private string _discontinuedDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string DiscontinuedDate
        {
            get { return this._discontinuedDate; }
            set { this._discontinuedDate = value; }
        }
        
        private double? _listPrice;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? ListPrice
        {
            get { return this._listPrice; }
            set { this._listPrice = value; }
        }
        
        private DateTimeOffset? _modifiedDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? ModifiedDate
        {
            get { return this._modifiedDate; }
            set { this._modifiedDate = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private ProductCategory _productCategory;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public ProductCategory ProductCategory
        {
            get { return this._productCategory; }
            set { this._productCategory = value; }
        }
        
        private string _productCategoryID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductCategoryID
        {
            get { return this._productCategoryID; }
            set { this._productCategoryID = value; }
        }
        
        private int? _productID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? ProductID
        {
            get { return this._productID; }
            set { this._productID = value; }
        }
        
        private ProductModel _productModel;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public ProductModel ProductModel
        {
            get { return this._productModel; }
            set { this._productModel = value; }
        }
        
        private string _productModelID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductModelID
        {
            get { return this._productModelID; }
            set { this._productModelID = value; }
        }
        
        private string _productNumber;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string ProductNumber
        {
            get { return this._productNumber; }
            set { this._productNumber = value; }
        }
        
        private string _rowguid;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Rowguid
        {
            get { return this._rowguid; }
            set { this._rowguid = value; }
        }
        
        private IList<SalesOrderDetail> _salesOrderDetails;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<SalesOrderDetail> SalesOrderDetails
        {
            get { return this._salesOrderDetails; }
            set { this._salesOrderDetails = value; }
        }
        
        private string _sellEndDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string SellEndDate
        {
            get { return this._sellEndDate; }
            set { this._sellEndDate = value; }
        }
        
        private DateTimeOffset? _sellStartDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? SellStartDate
        {
            get { return this._sellStartDate; }
            set { this._sellStartDate = value; }
        }
        
        private string _size;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Size
        {
            get { return this._size; }
            set { this._size = value; }
        }
        
        private double? _standardCost;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? StandardCost
        {
            get { return this._standardCost; }
            set { this._standardCost = value; }
        }
        
        private string _thumbNailPhoto;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ThumbNailPhoto
        {
            get { return this._thumbNailPhoto; }
            set { this._thumbNailPhoto = value; }
        }
        
        private string _thumbnailPhotoFileName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ThumbnailPhotoFileName
        {
            get { return this._thumbnailPhotoFileName; }
            set { this._thumbnailPhotoFileName = value; }
        }
        
        private string _weight;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Weight
        {
            get { return this._weight; }
            set { this._weight = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product()
        {
            this.SalesOrderDetails = new LazyList<SalesOrderDetail>();
        }
        
        /// <summary>
        /// Initializes a new instance of the Product class with required
        /// arguments.
        /// </summary>
        public Product(string name, string productNumber)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            if (productNumber == null)
            {
                throw new ArgumentNullException("productNumber");
            }
            this.Name = name;
            this.ProductNumber = productNumber;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken colorValue = inputObject["Color"];
                if (colorValue != null && colorValue.Type != JTokenType.Null)
                {
                    this.Color = ((string)colorValue);
                }
                JToken discontinuedDateValue = inputObject["DiscontinuedDate"];
                if (discontinuedDateValue != null && discontinuedDateValue.Type != JTokenType.Null)
                {
                    this.DiscontinuedDate = ((string)discontinuedDateValue);
                }
                JToken listPriceValue = inputObject["ListPrice"];
                if (listPriceValue != null && listPriceValue.Type != JTokenType.Null)
                {
                    this.ListPrice = ((double)listPriceValue);
                }
                JToken modifiedDateValue = inputObject["ModifiedDate"];
                if (modifiedDateValue != null && modifiedDateValue.Type != JTokenType.Null)
                {
                    this.ModifiedDate = ((DateTimeOffset)modifiedDateValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken productCategoryValue = inputObject["ProductCategory"];
                if (productCategoryValue != null && productCategoryValue.Type != JTokenType.Null)
                {
                    ProductCategory productCategory = new ProductCategory();
                    productCategory.DeserializeJson(productCategoryValue);
                    this.ProductCategory = productCategory;
                }
                JToken productCategoryIDValue = inputObject["ProductCategoryID"];
                if (productCategoryIDValue != null && productCategoryIDValue.Type != JTokenType.Null)
                {
                    this.ProductCategoryID = ((string)productCategoryIDValue);
                }
                JToken productIDValue = inputObject["ProductID"];
                if (productIDValue != null && productIDValue.Type != JTokenType.Null)
                {
                    this.ProductID = ((int)productIDValue);
                }
                JToken productModelValue = inputObject["ProductModel"];
                if (productModelValue != null && productModelValue.Type != JTokenType.Null)
                {
                    ProductModel productModel = new ProductModel();
                    productModel.DeserializeJson(productModelValue);
                    this.ProductModel = productModel;
                }
                JToken productModelIDValue = inputObject["ProductModelID"];
                if (productModelIDValue != null && productModelIDValue.Type != JTokenType.Null)
                {
                    this.ProductModelID = ((string)productModelIDValue);
                }
                JToken productNumberValue = inputObject["ProductNumber"];
                if (productNumberValue != null && productNumberValue.Type != JTokenType.Null)
                {
                    this.ProductNumber = ((string)productNumberValue);
                }
                JToken rowguidValue = inputObject["rowguid"];
                if (rowguidValue != null && rowguidValue.Type != JTokenType.Null)
                {
                    this.Rowguid = ((string)rowguidValue);
                }
                JToken salesOrderDetailsSequence = ((JToken)inputObject["SalesOrderDetails"]);
                if (salesOrderDetailsSequence != null && salesOrderDetailsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken salesOrderDetailsValue in ((JArray)salesOrderDetailsSequence))
                    {
                        SalesOrderDetail salesOrderDetail = new SalesOrderDetail();
                        salesOrderDetail.DeserializeJson(salesOrderDetailsValue);
                        this.SalesOrderDetails.Add(salesOrderDetail);
                    }
                }
                JToken sellEndDateValue = inputObject["SellEndDate"];
                if (sellEndDateValue != null && sellEndDateValue.Type != JTokenType.Null)
                {
                    this.SellEndDate = ((string)sellEndDateValue);
                }
                JToken sellStartDateValue = inputObject["SellStartDate"];
                if (sellStartDateValue != null && sellStartDateValue.Type != JTokenType.Null)
                {
                    this.SellStartDate = ((DateTimeOffset)sellStartDateValue);
                }
                JToken sizeValue = inputObject["Size"];
                if (sizeValue != null && sizeValue.Type != JTokenType.Null)
                {
                    this.Size = ((string)sizeValue);
                }
                JToken standardCostValue = inputObject["StandardCost"];
                if (standardCostValue != null && standardCostValue.Type != JTokenType.Null)
                {
                    this.StandardCost = ((double)standardCostValue);
                }
                JToken thumbNailPhotoValue = inputObject["ThumbNailPhoto"];
                if (thumbNailPhotoValue != null && thumbNailPhotoValue.Type != JTokenType.Null)
                {
                    this.ThumbNailPhoto = ((string)thumbNailPhotoValue);
                }
                JToken thumbnailPhotoFileNameValue = inputObject["ThumbnailPhotoFileName"];
                if (thumbnailPhotoFileNameValue != null && thumbnailPhotoFileNameValue.Type != JTokenType.Null)
                {
                    this.ThumbnailPhotoFileName = ((string)thumbnailPhotoFileNameValue);
                }
                JToken weightValue = inputObject["Weight"];
                if (weightValue != null && weightValue.Type != JTokenType.Null)
                {
                    this.Weight = ((string)weightValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Product
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Name == null)
            {
                throw new ArgumentNullException("Name");
            }
            if (this.ProductNumber == null)
            {
                throw new ArgumentNullException("ProductNumber");
            }
            if (this.Color != null)
            {
                outputObject["Color"] = this.Color;
            }
            if (this.DiscontinuedDate != null)
            {
                outputObject["DiscontinuedDate"] = this.DiscontinuedDate;
            }
            if (this.ListPrice != null)
            {
                outputObject["ListPrice"] = this.ListPrice.Value;
            }
            if (this.ModifiedDate != null)
            {
                outputObject["ModifiedDate"] = this.ModifiedDate.Value;
            }
            if (this.Name != null)
            {
                outputObject["Name"] = this.Name;
            }
            if (this.ProductCategory != null)
            {
                outputObject["ProductCategory"] = this.ProductCategory.SerializeJson(null);
            }
            if (this.ProductCategoryID != null)
            {
                outputObject["ProductCategoryID"] = this.ProductCategoryID;
            }
            if (this.ProductID != null)
            {
                outputObject["ProductID"] = this.ProductID.Value;
            }
            if (this.ProductModel != null)
            {
                outputObject["ProductModel"] = this.ProductModel.SerializeJson(null);
            }
            if (this.ProductModelID != null)
            {
                outputObject["ProductModelID"] = this.ProductModelID;
            }
            if (this.ProductNumber != null)
            {
                outputObject["ProductNumber"] = this.ProductNumber;
            }
            if (this.Rowguid != null)
            {
                outputObject["rowguid"] = this.Rowguid;
            }
            JArray salesOrderDetailsSequence = null;
            if (this.SalesOrderDetails != null)
            {
                if (this.SalesOrderDetails is ILazyCollection<SalesOrderDetail> == false || ((ILazyCollection<SalesOrderDetail>)this.SalesOrderDetails).IsInitialized)
                {
                    salesOrderDetailsSequence = new JArray();
                    outputObject["SalesOrderDetails"] = salesOrderDetailsSequence;
                    foreach (SalesOrderDetail salesOrderDetailsItem in this.SalesOrderDetails)
                    {
                        if (salesOrderDetailsItem != null)
                        {
                            salesOrderDetailsSequence.Add(salesOrderDetailsItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.SellEndDate != null)
            {
                outputObject["SellEndDate"] = this.SellEndDate;
            }
            if (this.SellStartDate != null)
            {
                outputObject["SellStartDate"] = this.SellStartDate.Value;
            }
            if (this.Size != null)
            {
                outputObject["Size"] = this.Size;
            }
            if (this.StandardCost != null)
            {
                outputObject["StandardCost"] = this.StandardCost.Value;
            }
            if (this.ThumbNailPhoto != null)
            {
                outputObject["ThumbNailPhoto"] = this.ThumbNailPhoto;
            }
            if (this.ThumbnailPhotoFileName != null)
            {
                outputObject["ThumbnailPhotoFileName"] = this.ThumbnailPhotoFileName;
            }
            if (this.Weight != null)
            {
                outputObject["Weight"] = this.Weight;
            }
            return outputObject;
        }
    }
}
